/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as pagesIndexImport } from "./routes/(pages)/index";
import { Route as pagesHomeIndexImport } from "./routes/(pages)/home/index";

// Create/Update Routes

const pagesIndexRoute = pagesIndexImport.update({
  id: "/(pages)/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const pagesHomeIndexRoute = pagesHomeIndexImport.update({
  id: "/(pages)/home/",
  path: "/home/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/(pages)/": {
      id: "/(pages)/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof pagesIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/(pages)/home/": {
      id: "/(pages)/home/";
      path: "/home";
      fullPath: "/home";
      preLoaderRoute: typeof pagesHomeIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof pagesIndexRoute;
  "/home": typeof pagesHomeIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof pagesIndexRoute;
  "/home": typeof pagesHomeIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/(pages)/": typeof pagesIndexRoute;
  "/(pages)/home/": typeof pagesHomeIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/home";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/home";
  id: "__root__" | "/(pages)/" | "/(pages)/home/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  pagesIndexRoute: typeof pagesIndexRoute;
  pagesHomeIndexRoute: typeof pagesHomeIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  pagesIndexRoute: pagesIndexRoute,
  pagesHomeIndexRoute: pagesHomeIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(pages)/",
        "/(pages)/home/"
      ]
    },
    "/(pages)/": {
      "filePath": "(pages)/index.tsx"
    },
    "/(pages)/home/": {
      "filePath": "(pages)/home/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
